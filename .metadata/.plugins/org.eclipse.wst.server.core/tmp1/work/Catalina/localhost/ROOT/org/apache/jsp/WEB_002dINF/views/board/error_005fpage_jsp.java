/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-08 04:29:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class error_005fpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/psh_java/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/ex02/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1607395694635L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style>\r\n");
      out.write("\t* {\r\n");
      out.write("\t  -webkit-box-sizing: border-box;\r\n");
      out.write("\t          box-sizing: border-box;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbody {\r\n");
      out.write("\t  padding: 0;\r\n");
      out.write("\t  margin: 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#notfound {\r\n");
      out.write("\t  position: relative;\r\n");
      out.write("\t  height: 100vh;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#notfound .notfound {\r\n");
      out.write("\t  position: absolute;\r\n");
      out.write("\t  left: 50%;\r\n");
      out.write("\t  top: 50%;\r\n");
      out.write("\t  -webkit-transform: translate(-50%, -50%);\r\n");
      out.write("\t      -ms-transform: translate(-50%, -50%);\r\n");
      out.write("\t          transform: translate(-50%, -50%);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound {\r\n");
      out.write("\t  max-width: 520px;\r\n");
      out.write("\t  width: 100%;\r\n");
      out.write("\t  line-height: 1.4;\r\n");
      out.write("\t  text-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound .notfound-404 {\r\n");
      out.write("\t  position: relative;\r\n");
      out.write("\t  height: 200px;\r\n");
      out.write("\t  margin: 0px auto 20px;\r\n");
      out.write("\t  z-index: -1;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound .notfound-404 h1 {\r\n");
      out.write("\t  font-family: 'Montserrat', sans-serif;\r\n");
      out.write("\t  font-size: 236px;\r\n");
      out.write("\t  font-weight: 200;\r\n");
      out.write("\t  margin: 0px;\r\n");
      out.write("\t  color: #211b19;\r\n");
      out.write("\t  text-transform: uppercase;\r\n");
      out.write("\t  position: absolute;\r\n");
      out.write("\t  left: 50%;\r\n");
      out.write("\t  top: 20%;\r\n");
      out.write("\t  -webkit-transform: translate(-50%, -50%);\r\n");
      out.write("\t      -ms-transform: translate(-50%, -50%);\r\n");
      out.write("\t          transform: translate(-50%, -50%);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound .notfound-404 h2 {\r\n");
      out.write("\t  font-family: 'Montserrat', sans-serif;\r\n");
      out.write("\t  font-size: 28px;\r\n");
      out.write("\t  font-weight: 400;\r\n");
      out.write("\t  text-transform: uppercase;\r\n");
      out.write("\t  color: #211b19;\r\n");
      out.write("\t  background: #fff;\r\n");
      out.write("\t  padding: 10px 5px;\r\n");
      out.write("\t  margin: auto;\r\n");
      out.write("\t  display: inline-block;\r\n");
      out.write("\t  position: absolute;\r\n");
      out.write("\t  bottom: 0px;\r\n");
      out.write("\t  left: 0;\r\n");
      out.write("\t  right: 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound a {\r\n");
      out.write("\t  font-family: 'Montserrat', sans-serif;\r\n");
      out.write("\t  display: inline-block;\r\n");
      out.write("\t  font-weight: 700;\r\n");
      out.write("\t  text-decoration: none;\r\n");
      out.write("\t  color: #fff;\r\n");
      out.write("\t  text-transform: uppercase;\r\n");
      out.write("\t  padding: 13px 23px;\r\n");
      out.write("\t  background: #ff8b77;\r\n");
      out.write("\t  font-size: 18px;\r\n");
      out.write("\t  -webkit-transition: 0.2s all;\r\n");
      out.write("\t  transition: 0.2s all;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notfound a:hover {\r\n");
      out.write("\t  color: #ff6300;\r\n");
      out.write("\t  background: #211b19;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media only screen and (max-width: 767px) {\r\n");
      out.write("\t  .notfound .notfound-404 h1 {\r\n");
      out.write("\t    font-size: 148px;\r\n");
      out.write("\t  }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media only screen and (max-width: 480px) {\r\n");
      out.write("\t  .notfound .notfound-404 {\r\n");
      out.write("\t    height: 148px;\r\n");
      out.write("\t    margin: 0px auto 10px;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  .notfound .notfound-404 h1 {\r\n");
      out.write("\t    font-size: 86px;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  .notfound .notfound-404 h2 {\r\n");
      out.write("\t    font-size: 16px;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  .notfound a {\r\n");
      out.write("\t    padding: 7px 15px;\r\n");
      out.write("\t    font-size: 14px;\r\n");
      out.write("\t  }\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("\r\n");
      out.write("\t<title>Error</title>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Google font -->\r\n");
      out.write("\t<link href=\"https://fonts.googleapis.com/css?family=Montserrat:200,400,700\" rel=\"stylesheet\">\r\n");
      out.write("\t<title>error</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"notfound\">\r\n");
      out.write("\t\t<div class=\"notfound\">\r\n");
      out.write("\t\t\t<div class=\"notfound-404\">\r\n");
      out.write("\t\t\t\t<h1>Sorry</h1>\r\n");
      out.write("\t\t\t\t<h2>Error - 작업을 다시 확인해 주세요.</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<a href=\"javascript:history.go(-1)\" style=\"color:#ff8b77; background:#fff\">Go TO Back</a>\r\n");
      out.write("\t\t\t<a href=\"/board/list\">Go TO Board</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
