/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-09 06:43:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class get_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>Board</title>\r\n");
      out.write("\t\t<meta charset=\"utf-8\" />\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("\t\t<meta name=\"description\" content=\"\" />\r\n");
      out.write("\t\t<meta name=\"keywords\" content=\"\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"/resources/assets/css/main.css\" />\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body class=\"is-preload\">\r\n");
      out.write("\t\t<!-- Main -->\r\n");
      out.write("\t\t\t<div id=\"main\">\r\n");
      out.write("\t\t\t\t<div class=\"wrapper\">\r\n");
      out.write("\t\t\t\t\t<div class=\"inner\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<!-- Elements -->\r\n");
      out.write("\t\t\t\t\t\t\t<header class=\"major\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h1>Board</h1>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>게시글 상세보기</p>\r\n");
      out.write("\t\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- Table -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<h3><a href=\"/board/list");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.getListLink()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"button small\">목록 보기</a></h3>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<form method=\"post\" action=\"/board/remove\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"pageNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"amount\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"type\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"keyword\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"fields\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<h4>번호</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input name=\"bno\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<h4>제목</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input name=\"title\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<h4>내용</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<textarea name=\"content\" rows=\"6\" style=\"resize:none\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<h4>작성자</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input name=\"writer\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<ul class=\"actions special\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"button\" value=\"수정\" onclick=\"location.href='/board/modify");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.getListLink()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&bno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"삭제\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<ul class=\"icons\">\r\n");
      out.write("\t\t\t                       \t\t<li style=\"display:block\">\r\n");
      out.write("\t\t\t                           \t\t<span class=\"icon solid fa-envelope\"></span>\r\n");
      out.write("\t\t\t                          \t\t <strong>댓글</strong>\r\n");
      out.write("\t\t\t                        \t</li>\r\n");
      out.write("\t\t\t                    \t</ul>\r\n");
      out.write("\t\t\t                     \t<a href=\"#\" style=\"width:100%\" class=\"button primary small register\">댓글 등록</a>\r\n");
      out.write("\t\t\t                     \t<div class=\"fields register-form\" style=\"display:none\">\r\n");
      out.write("\t\t\t                        \t<div class=\"field\">\r\n");
      out.write("\t\t\t                           \t\t<h4>작성자</h4>\r\n");
      out.write("\t\t\t                           \t\t<input name=\"replyer\" placeholder=\"Replyer\" type=\"text\" />\r\n");
      out.write("\t\t\t                        \t</div>\r\n");
      out.write("\t\t\t                        <div class=\"field\">\r\n");
      out.write("\t\t\t                           <h4>댓글</h4>\r\n");
      out.write("\t\t\t                           <textarea name=\"reply\" rows=\"6\" placeholder=\"Reply\"\r\n");
      out.write("\t\t\t                              style=\"resize: none\"></textarea>\r\n");
      out.write("\t\t\t                        </div>\r\n");
      out.write("\t\t\t                        <div style=\"text-align:center\" class=\"field regBtn\">\r\n");
      out.write("\t\t\t                           <a href=\"#\" class=\"button primary small finish\">등록</a>\r\n");
      out.write("\t\t\t                           <a href=\"#\" class=\"button primary small cancle\">취소</a>\r\n");
      out.write("\t\t\t                        </div>\r\n");
      out.write("\t\t\t                     </div>\r\n");
      out.write("\t\t\t                     <ul class=\"replies\">\r\n");
      out.write("\t\t\t                     </ul>\r\n");
      out.write("\t\t\t                     <div class=\"big-width\" style=\"text-align: center\">\r\n");
      out.write("\t\t\t                     \r\n");
      out.write("\t\t\t                     </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div> \r\n");
      out.write("\t\t<!-- Scripts -->\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/jquery.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/jquery.dropotron.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/browser.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/breakpoints.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/util.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/main.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"/resources/assets/js/reply.js\"></script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\t/* $(document).ready(function() {\r\n");
      out.write("\t\t\t\t\tconsole.log(replyService.name);\r\n");
      out.write("\t\t\t\t}); */\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\".register\").on(\"click\",function(e){\r\n");
      out.write("\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\".register-form\").show();\r\n");
      out.write("\t\t\t\t\t$(this).hide();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\".cancle\").on(\"click\",function(e){\r\n");
      out.write("\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\".register\").show();\r\n");
      out.write("\t\t\t\t\t$(\".register-form\").hide();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\".finish\").on('click',function(e){\r\n");
      out.write("\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar bnoValue = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\tvar replyValue = $(\"textarea[name='reply']\").val();\r\n");
      out.write("\t\t\t\t\tvar replyerValue = $(\"input[name='replyer']\").val();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treplyService.add({bno:bnoValue,reply:replyValue,replyer:replyerValue},\r\n");
      out.write("\t\t\t\t\t\tfunction(result){ alert(result+\" 등록완료\");location.reload();});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t\t\tvar bnoValue = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\tvar replyUL = $(\".replies\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar pageNum = 1;\r\n");
      out.write("\t\t\t\t\tvar replyPageFooter = $(\".big-width\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tshowList(pageNum);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(window).resize(function(){\r\n");
      out.write("\t\t\t\t\t\tshowList(pageNum);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfunction showReplyPage(replyCnt) {\r\n");
      out.write("\t\t\t\t\t\tvar str = \"\";\r\n");
      out.write("\t\t\t\t\t\tvar endNum = Math.ceil(pageNum / 10.0) * 10;\r\n");
      out.write("\t\t\t\t\t\tvar startNum = endNum - 9;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar prev = startNum != 1;\r\n");
      out.write("\t\t\t\t\t\tvar next = false;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(endNum * 10 >= replyCnt){\r\n");
      out.write("\t\t\t\t\t\t\tendNum = Math.ceil(replyCnt / 10.0);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(endNum * 10 < replyCnt){\r\n");
      out.write("\t\t\t\t\t\t\tnext = true;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//JS 미디어 쿼리\r\n");
      out.write("\t\t\t\t\t\t//페이지 이동 시 a 태그의 class이름은 'changePage'로 설정한다\r\n");
      out.write("\t\t\t\t\t\t//각 a태그의  href에는 이동할 페이지 번호만 작성해준다.\r\n");
      out.write("\t\t\t\t\t\tif(matchMedia(\"screen and (max-width:918px)\").matches){\r\n");
      out.write("\t\t\t\t\t\t\t//918px보다 작거나 같은때\r\n");
      out.write("\t\t\t\t\t\t\t//현재 페이지만 나타내고, 이전과 다음으로 -1, +1씩 이동하도록 구현\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(pageNum);\r\n");
      out.write("\t\t\t\t\t\t\tpageNum =  Number(pageNum);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tif(pageNum != 1){\r\n");
      out.write("\t\t\t\t\t\t\t\tstr +=\"<a href='\"+(pageNum-1)+\"' class='changePage'>&lt;</a>\";\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tstr +=\"<code>\"+pageNum+\"</code>\";\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tif(pageNum != replyCnt){\r\n");
      out.write("\t\t\t\t\t\t\t\tstr += \"<a href='\"+(pageNum+1)+\"' class='changePage'>&gt;</a>\";\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t//현재 페이지를 제외한 다른 페이지는 a태그로 클릭 가능\r\n");
      out.write("\t\t\t\t\t\t\t//10개씩 페이지를 구성한다\r\n");
      out.write("\t\t\t\t\t\t\tif(prev){\r\n");
      out.write("\t\t\t\t\t\t\t\tstr += \"<a href='\"+(startNum-1)+\"' class='changePage'>&lt;</a>&nbsp;&nbsp;\";\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tfor (var num = startNum; num < endNum+1; num++) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif(pageNum == num){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstr += \"<code>\"+num+\"</code>&nbsp;&nbsp;\";\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif(pageNum != num){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstr +=\"<a href='\"+num+\"' class='changePage'>\"+num+\"</a>&nbsp;&nbsp;\";\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif(next){\r\n");
      out.write("\t\t\t\t\t\t\t\tstr += \"<a href='\"+(endNum+1)+\"' class='changePage'>&gt;</a>\";\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\treplyPageFooter.html(str);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\".changePage\").on(\"click\",function(e){\r\n");
      out.write("\t\t\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t\tpageNum =$(this).attr(\"href\");\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(pageNum);\r\n");
      out.write("\t\t\t\t\t\t\tshowList(pageNum);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfunction showList(page) {\r\n");
      out.write("\t\t\t\t\t\treplyService.getList({bno:bnoValue,page:pageNum},function(replyCnt, list){\r\n");
      out.write("\t\t\t\t\t\t\t//댓글이 없으면 없다고 출력\r\n");
      out.write("\t\t\t\t\t\t\t//있으면 그 민큼 반복해서 html()로 뿌리기\r\n");
      out.write("\t\t\t\t\t\t\tvar ulStr = \"\"\r\n");
      out.write("\t\t\t\t\t\t\tif(replyCnt != 0){\r\n");
      out.write("\t\t\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tulStr +=\"<li><a>\"+list[i].reply+\"</a><br>\"+list[i].replyer+\"</li>\";\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treplyUL.html(ulStr);\r\n");
      out.write("\t\t\t\t\t\t\t\tshowReplyPage(replyCnt);\r\n");
      out.write("\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\tulStr = \"<li>등록된 댓글이 없습니다.</li>\"\r\n");
      out.write("\t\t\t\t\t\t\t\treplyUL.html(ulStr);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t//댓글 목록 테스트\r\n");
      out.write("\t\t\t/* \tvar bnoValue = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treplyService.getList({bno:bnoValue, page:1},function(total,list){\r\n");
      out.write("\t\t\t\t\tconsole.log(total);\r\n");
      out.write("\t\t\t\t\tconsole.log(list);\r\n");
      out.write("\t\t\t\t}) */\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
